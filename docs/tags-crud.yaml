openapi: 3.0.0
info:
  title: Eluvio Video Tags API
  version: 1.0.0

paths:
  /q/{qid}/tags:
    get:
      summary: List tags for a video
      parameters:
        - in: path
          name: qid
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum: [video, frame]
        - in: query
          name: container
          schema:
            type: string
          description: Limit to only tags with a particular container
        - in: query
          name: track
          schema:
            type: string
        - in: query
          name: start_time
          schema:
            type: integer
          description: Lower end of timerange for the tags
        - in: query
          name: end_time
          schema:
            type: integer
          description: Upper end of timerange for the tags
      responses:
        '200':
          description: List of tags
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/TimeTag'
                  - type: array
                    items:
                      $ref: '#/components/schemas/FrameTag'
              examples:
                video_tags_example:
                  summary: Video tags example
                  value:
                    - id: 1
                      start_time: 12500
                      end_time: 15880
                      text: "Goal scored"
                      container: "video transcode #1"
                      track: "game events"
                      data:
                        box: [0.05, 0.95, 0.95, 0.05]
                        arbitrary: "data"
                    - id: 2
                      start_time: 22000
                      end_time: 25200
                      text: "Hello!"
                      container: "video transcode #1"
                      track: "speech to text"
                      data:
                        box: [0.05, 0.95, 0.95, 0.05]
                frame_tags_example:
                  summary: Frame tags example
                  value:
                    - id: 3
                      frame_index: 0
                      text: "soccer ball"
                      track: "game events"
                      container: "assets/soccer.jpg"
                      data:
                        box: [0.05, 0.95, 0.95, 0.05]
                        confidence: 0.93
                    - id: 4
                      frame_index: 179
                      text: "Player jumps"
                      track: "player events"
                      container: "video transcode #2"
                      data:
                        confidence: 0.87

    post:
      summary: Create a new tag
      parameters:
        - in: path
          name: qid
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum: [video, frame]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TimeTagCreate'
                - $ref: '#/components/schemas/FrameTagCreate'
      responses:
        '201':
          description: All tags created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  created_ids:
                    type: array
                    items:
                      type: integer

          
  /q/{qid}/tags/bulk:
    post:
      summary: Upload in bulk
      parameters:
        - in: path
          name: qid
          required: true
          schema:
            type: string
      responses:
        '201':
          description: All tags created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  created_ids:
                    type: array
                    items:
                      type: integer
      

  /q/{qid}/tags/{tag_id}:
    put:
      summary: Update an existing tag
      parameters:
        - in: path
          name: qid
          required: true
          schema:
            type: string
        - in: path
          name: tag_id
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum: [video, frame]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TimeTagCreate'
                - $ref: '#/components/schemas/FrameTagCreate'
      responses:
        '200':
          description: Tag updated

    delete:
      summary: Delete a tag
      parameters:
        - in: path
          name: qid
          required: true
          schema:
            type: string
        - in: path
          name: tag_id
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum: [video, frame]
      responses:
        '204':
          description: Tag deleted

  /q/{qid}/commit:
    post:
      summary: Commit tags to a fabric write token
      description: Pass in a write token and it will write the existing tags as files to the object in the format that we know and love. Includes shot level aggregation.
      parameters:
        - in: path
          name: qid
          required: true
          schema:
            type: string
        - in: query
          name: write_token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Commit successful

components:
  schemas:
    TimeTag:
      type: object
      properties:
        id:
          type: integer
        start_time:
          type: integer
        end_time:
          type: integer
        text:
          type: string
        container:
          type: string
        track:
          type: string
        data:
          type: object
          additionalProperties: true

    FrameTag:
      type: object
      properties:
        id:
          type: integer
        frame_index:
          type: integer
        text:
          type: string
        container:
          type: string
        track:
          type: string
        data:
          type: object
          additionalProperties: true

    TimeTagCreate:
      type: object
      required: [start_time, end_time, text]
      properties:
        start_time:
          type: integer
        end_time:
          type: integer
        text:
          type: string
        container:
          type: string
        track:
          type: string
        data:
          type: object
          additionalProperties: true

    FrameTagCreate:
      type: object
      required: [frame_index, text]
      properties:
        frame_index:
          type: integer
        text:
          type: string
        container:
          type: string
        track:
          type: string
        data:
          type: object
          additionalProperties: true