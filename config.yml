storage:
  # paths are relative to src code root unless prefixed with "/"
  tags: data/tags
  container_cache: data/cache
  parts: data/parts
  images: data/images
  tmp: data/tmp
  logs: logs
fabric:
  # used for downloading parts (requires special build)
  parts_url: http://192.168.96.203/config?self&qspace=main
  # for all other fabric interaction
  config_url: https://host-76-74-28-229.contentfabric.io/config?self&qspace=main
services:
  llava:
    image: "localhost/llava:latest"
    type: "video"
    frame_level: true
    # force to run on cpu
    allowed_gpus: []
    cpu_slots: []
  llava_brief:
    image: "localhost/llava_brief:latest"
    type: "video"
    frame_level: true
    # force to run on cpu
    allowed_gpus: []
  helmet:
    image: "localhost/helmet:latest"
    type: "video"
    frame_level: true
    # force to run on cpu
    allowed_gpus: []
  asr: 
    image: "localhost/asr:latest"
    type: "audio"
  caption:
    image: "localhost/caption:latest"
    type: "video"
    frame_level: true
  shot:
    image: "localhost/shot:latest"
    type: "video"
    frame_level: false
    allowed_gpus: [0, 2, 3, 4]
  celeb:
    image: "localhost/celeb:latest"
    type: "video"
    frame_level: true
    allowed_gpus: [0, 2, 3, 4]
  ocr:
    image: "localhost/ocr:latest"
    type: "video"
    frame_level: true
  logo:
    image: "localhost/logo:latest"
    type: "video"
    frame_level: true
  player:
    image: "localhost/player:latest"
    type: "video"
    frame_level: true
    # NOTE: this depends on the host machine
    # device ids which don't exist on the host will be ignored when scheduling jobs
    allowed_gpus: [0, 2, 3, 4]
  # Used for testing
  dummy_gpu:
    image: "localhost/dummy_gpu:latest"
    type: "video"
    frame_level: true
  dummy_cpu:
    image: "localhost/dummy_cpu:latest"
    type: "video"
    frame_level: true
    allowed_gpus: []
  test_slow:
    image: "localhost/slow_model_test:latest"
    type: "video"
    frame_level: true
    allowed_gpus: []
devices: 
  # if true, then tagger will run on gpus even if they are used by a foreign process
  # TODO: implement this, it is currently disabled to make life easier
  allow_in_use_gpus: false
  wait_for_gpu_sleep: 5
  default_cpu_slots: ["cpu1", "cpu2", "cpu3", "cpu4"]
watcher:
  sleep: 5
agg:
  interval: 10